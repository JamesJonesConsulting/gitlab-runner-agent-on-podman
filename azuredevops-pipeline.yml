parameters:
  - name: host
    displayName: Linux Hostname (example.com)
    type: string
    default: jamacer
    values:
      - asuspn51
      - jamacer
  - name: hosts
    type: object
    default:      
      all:
      hosts:
          asuspn51:
            ansible_host: 127.0.0.1
          jamacer:
            ansible_host: 127.0.0.1
      children:
          gitlab_runners:
          hosts:
              asuspn51:
              jamacer:


resources:
  # repositories:
  #   - repository: templates
  #     type: github
  #     name: JamesJonesConsulting/gitlab-runner-agent-on-podman
  #     endpoint: JamesJonesConsulting
      # type: git
      # name: https://github.com/JamesJonesConsulting/gitlab-runner-agent-on-podman.git
      # ref: refs/heads/main     
  containers: 
    - container: podman-dind
      image: registry.gitlab.com/jamesjonesconsulting/podman-dind-like:latest
      endpoint: JamesJonesConsultingDockerGitlab
# extends:
#   template: setup.yml@templates    
#   parameters:
#     host: ${{ parameters.host }}

jobs:
  - deployment: gitlab_runner_deployment
    displayName: Gitlab Runner Deployment
    pool: FedoraHosted
    environment: GitLab
    container: podman-dind
    variables:
      - group: Connections
    strategy:
      runOnce:
        deploy:
          steps: 
            - checkout: self 
            - bash: |
                eval $(ssh-agent); ssh-add <(echo "$(default_ssh_key)" | base64 -d);
                echo "${INVENTORY}" > hosts
                ansible-galaxy collection install -r ansible/requirements.yml -f 
                ansible-playbook -i hosts --user $(default_user) ansible/playbook.yml --extra-vars 'host_or_group=${{ parameters.host }}'-b -vvvv
              displayName: Connect to host and setup GitLab Runner with Podman
              env: 
                INVENTORY: ${{ convertToJson(parameters.hosts) }}
